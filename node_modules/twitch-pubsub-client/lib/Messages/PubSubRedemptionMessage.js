"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PubSubRedemptionMessage = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
/**
 * A message that informs about a user redeeming a custom channel points reward.
 */
var PubSubRedemptionMessage = /** @class */ (function () {
    /** @private */
    function PubSubRedemptionMessage(_data, apiClient) {
        this._data = _data;
        this._apiClient = apiClient;
    }
    Object.defineProperty(PubSubRedemptionMessage.prototype, "id", {
        /**
         * The internal redemption ID.
         */
        get: function () {
            return this._data.data.redemption.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "userId", {
        /**
         * The ID of the user that redeemed the reward.
         */
        get: function () {
            return this._data.data.redemption.user.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "userName", {
        /**
         * The name of the user that redeemed the reward.
         */
        get: function () {
            return this._data.data.redemption.user.login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "userDisplayName", {
        /**
         * The display name of the user that redeemed the reward.
         */
        get: function () {
            return this._data.data.redemption.user.display_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more data about the user.
     *
     * @deprecated Use {@HelixUserApi#getUserById} instead.
     */
    PubSubRedemptionMessage.prototype.getUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._apiClient.helix.users.getUserById(this._data.data.redemption.user.id)];
            });
        });
    };
    Object.defineProperty(PubSubRedemptionMessage.prototype, "channelId", {
        /**
         * The ID of the channel where the reward was redeemed.
         */
        get: function () {
            return this._data.data.redemption.channel_id;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more data about the channel where the reward was redeemed.
     *
     * @deprecated Use {@HelixUserApi#getUserById} instead.
     */
    PubSubRedemptionMessage.prototype.getChannel = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this._apiClient.helix.users.getUserById(this._data.data.redemption.channel_id)];
            });
        });
    };
    Object.defineProperty(PubSubRedemptionMessage.prototype, "redemptionDate", {
        /**
         * The date when the reward was redeemed.
         */
        get: function () {
            return new Date(this._data.data.redemption.redeemed_at);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardId", {
        /**
         * The ID of the reward.
         */
        get: function () {
            return this._data.data.redemption.reward.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardName", {
        /**
         * The name of the reward.
         */
        get: function () {
            return this._data.data.redemption.reward.title;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardPrompt", {
        /**
         * The prompt of the reward.
         */
        get: function () {
            return this._data.data.redemption.reward.prompt;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardCost", {
        /**
         * The cost of the reward, in channel points.
         */
        get: function () {
            return this._data.data.redemption.reward.cost;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardIsQueued", {
        /**
         * Whether the reward gets added to the request queue.
         */
        get: function () {
            return !this._data.data.redemption.reward.should_redemptions_skip_request_queue;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "rewardImage", {
        /**
         * The image set associated with the reward.
         */
        get: function () {
            return this._data.data.redemption.reward.image;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "message", {
        /**
         * The full message that was sent with the notification.
         */
        get: function () {
            return this._data.data.redemption.user_input;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PubSubRedemptionMessage.prototype, "status", {
        /**
         * The status of the redemption.
         */
        get: function () {
            return this._data.data.redemption.status;
        },
        enumerable: false,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], PubSubRedemptionMessage.prototype, "_apiClient", void 0);
    return PubSubRedemptionMessage;
}());
exports.PubSubRedemptionMessage = PubSubRedemptionMessage;
